# Neovim config switcher (this should work in both bash & zsh)
# 	See: [reference](https://michaeluloth.com/neovim-switch-configs/)
#
# The following aliases can be used to startup their respective
# 	nvim distributions.
#
#	i.e. to open a .bashrc file in LazyVim: `nvim-lazy ~/.bashrc` 
#

# Chosen to use nvim-<distro_shorthand> as aliases, but they could be anything.
# NVIM_APPNAME, I'm pretty sure, needs to be the name of the folder you installed
# 	the distro in. ~/.config/ may be the default, and there's likely an
# 	envar that nvim uses if this needs to be changed. Check the install scripts
# 	in the following folder if your unsure how your nvim distros are being installed:
# 	
# 	$(dev-env_top)/nvims/dist-installs/
#

alias nvim-lazy="NVIM_APPNAME=LazyVim nvim"
#alias nvim-chad="NVIM_APPNAME=NvChad nvim"
#alias nvim-astro="NVIM_APPNAME=AstroNvim nvim"


function nvims() {
  # Add an installed nvim distribution to the nvims list by
  # 	including its alias in this list variable (items).
  items=("default" "LazyVim")

  # Display options from listvar 'items' in a fzf prompt so
  # 	that the user can select the one they want used.
  # 	If exited, $config=0, and nvims() returns 0.
  # 	If 'default' is selected, $config="".
  # 	Using this, something like the above aliases are called.
  config=$(printf "%s\n" "${items[@]}" | fzf --prompt=" Neovim Config  " --height=~50% --layout=reverse --border --exit-0)
  if [[ -z $config ]]; then
    echo "Nothing selected"
    return 0
  elif [[ $config == "default" ]]; then
    config=""
  fi
  NVIM_APPNAME=$config nvim $@
}

# A keybinding to access the nvims menu.
# I'll want to change this to something other than 'a'...
#	*i'm used to ctl+a moving cursor to start of line in bash*
#

#if [ -n "$($SHELL -c 'echo $ZSH_VERSION')" ]; then
#   bindkey -s ^a "nvims\n"
#elif [ -n "$($SHELL -c 'echo $BASH_VERSION')" ]; then
#   bind -x '"\C-n": nvims'
#else
#   bindkey -s ^a "nvims\n"
#fi

